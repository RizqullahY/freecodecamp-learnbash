builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
echo terminal
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
echo hello terminal
php -v
pwd
ls --color=auto
cd freeCodeCamp/
ls --color=auto
pwd
__vsc_prompt_cmd_original
ls --color=auto
cd test/
__vsc_prompt_cmd_original
ls --color=auto
pwd
ls --color=auto
cd ..
clear
ls --color=auto
more package.json
__vsc_prompt_cmd_original
clear
ls --color=auto
cd node_modules/
__vsc_prompt_cmd_original
ls --color=auto
ls --color=auto -l
has
cd has/
__vsc_prompt_cmd_original
ls --color=auto
__vsc_prompt_cmd_original
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
more README.md
__vsc_prompt_cmd_original
ls --color=auto
more LICENSE-MIT
clear
ls --color=auto
cd src/
__vsc_prompt_cmd_original
ls --color=auto
pwd
/
cd /
ls --color=auto
cd /workspace/project
cd freeCodeCamp/node_modules/has/src
ls --color=auto
more index.js
cd ..
cd ..
cd ../..
ls --color=auto
clear
mkdir website
ls --color=auto
cd website/
__vsc_prompt_cmd_original
ls --color=auto
echo hello website
touch index.html
touch style.css
touch styles.css
ls --color=auto
touch index.js
touch .gitignore
ls --color=auto
ls --color=auto --help
ls --color=auto -a
cd .
touch background.jpg
touch header.png
touch footer.jpeg
ls --color=auto
touch roboto.font
__vsc_prompt_cmd_original
clear
touch lato.font
__vsc_prompt_cmd_original
touch menlo.font
ls --color=auto
touch codeAlly.svg
touch CodeAlly.svg
touch CodeRoad.svg
touch freeCodeCamp.svg
__vsc_prompt_cmd_original
ls --color=auto
mkdir images
ls --color=auto
cp background.jpg images
cd images/
__vsc_prompt_cmd_original
ls --color=auto
cd ..
ls --color=auto
rm background.jpg
__vsc_prompt_cmd_original
ls --color=auto
cp header.png images
clear
cp footer.jpeg images
cd images/
ls --color=auto
cd ..
rm footer.jpeg header.png
ls --color=auto
__vsc_prompt_cmd_original
rm footer.jpeg header.png
touch footer.jpeg header.png
rm footer.jpeg header.png
rm footer.jpeg header.png
rm header.png
rm footer.jpeg
ls --color=auto
mv roboto.font roboto.woff
la
ls --color=auto
mv lato.font lato.woff
mv lato.font lato.ttf
mv lato.font lato.ttf
ls --color=auto
rm lato.woff
touch lato.font
mv lato.font lato.ttf
mv menlo.font menlo.otf
ls --color=auto
mkdir font
mkdir fonts
ls --color=auto
mv roboto.woff fonts/
find
mv lato.ttf fonts
mv menlo.otf font
mv menlo.otf fonts
touch menlo.otf
mv menlo.otf fonts
find
mkdir client
mkdi client/src
mkdi client/src
mkdi client/src/
mkdir client/src/
mv index.html client/src/
find
mv index.js client/src/
mv styles.css client/src/
find
find client/
find --hel
find --help
find -name index.html
find -name styles
find -name styles.css
find -name src
find
cd client/
__vsc_prompt_cmd_original
mkdir assets
cd assets/
mkdir images
cd images/
touch background.jpg
cd ..
find
cd ..
cd ..
find
cd client/
cd assets/images/
cd ../../..
cd images
ls --color=auto
cd ..
ls --color=auto
cd images/
mv header.png ../
ls --color=auto
cd ..
ls --color=auto
find images
mv images/ client/assets/images/
find
find --name iamges
find name=images
find --name images
find -name images
ls --color=auto
mv header.png ./client/assets/images/
find -name header.png
find -name footer.jpeg
mv ../images/footer.jpeg ./client/assets/images/
mv ../footer.jpeg ./client/assets/images/
mv ./images/footer.jpeg ./client/assets/images/
mv images/footer.jpeg client/assets/images/
mv images/footer.jpeg client/assets/images
mv images/footer.jpeg client/assets/images
find
rmdir images/
rm images/background.jpg
rmdir images/
ls --color=auto
mkdir client/assets/icons/
mv CodeAlly.svg client/assets/icons/
find
ls --color=auto
mv CodeRoad.svg client/assets/ic
mv CodeRoad.svg client/assets/icons
touch CodeRoad.svg
mv CodeRoad.svg client/assets/icons
mv freeCodeCamp.svg client/assets/icons
find
mkdir fonts
mkdir client/assets/fonts
touch client/assets/fonts/roboto-bold.woff
touch client/assets/fonts/roboto-light.woff
find client/assets/fonts
touch client/assets/fonts/lato-bold.ttf
touch client/assets/fonts/lato-light.ttf
find client/assets/fonts
find
rmdir --help
rm --help
rmdir -r fonts
rm -r fonts
ls --color=auto
touch package.json
touch server.js
touch README.md
ls --color=auto
echo Yay!
echo I finished the boilerplate!
echo one more thing...
echo I made this boilerplate >> README.md
more README.md
echo from the command line >> README.md
more README.md
echo for the freeCodeCamp bash lessons >> README.md
more README.md
cd ..
ls --color=auto
mv website website-boilerplate
ls --color=auto
cp --help
cp website-boilerplate/ toms-website
cp -r website-boilerplate/ toms-website
ls --color=auto
find --name toms-website/
find -name toms-website/
__vsc_prompt_cmd_original
find -name toms-website
find
find toms-website/
find
ls --color=auto
find ./
find website-boilerplate/
clear
echo goodbye terminal
exit
git remote -v
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
git remote
git remote add origin https://github.com/RizqullahY/freecodecamp-learnbash.git
git init
git remote add origin https://github.com/RizqullahY/freecodecamp-learnbash.git
git add .
git rm --cached
git rm --cached ./
git rm --cached project
git commit -m "Initial Commit!"
git push origin master
cd project/
rm -rf .git
cd ..
git add .
git commit -m "CHORE: remove childing git"
git push origin master
git push origin master --force
cd project/
rm -rf .git
git
git remote
git rm --cached
git remote
cd ..
git add
git add .
git commit -m "FIXING Childing git"
git push origin master
git pull origin master
git push origin master
git push origin master --force
git add .
cd project/
cd ..
git commit -m "CHORE: cleaning repo"
git push origin maste
git push origin master
__vsc_prompt_cmd_original
ga .
git add .
