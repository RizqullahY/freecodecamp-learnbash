FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'echo' && lastCommand[1] === 'hello' && lastCommand[2] === 'terminal')

at Context.<anonymous> (test/5.test.js:8:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'echo' && lastCommand[1] === 'hello' && lastCommand[2] === 'terminal')

at Context.<anonymous> (test/5.test.js:8:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'pwd' && /\/project\/freeCodeCamp$/.test(cwd))

at Context.<anonymous> (test/40.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'pwd' && /\/project\/freeCodeCamp\/test$/.test(cwd))

at Context.<anonymous> (test/70.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'ls' && /\/project\/freeCodeCamp$/.test(cwd))

at Context.<anonymous> (test/100.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'ls' && lastCommand[1] === '-l' && /\/project\/freeCodeCamp\/node_modules$/.test(cwd))

at Context.<anonymous> (test/160.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'cd' && /\/project\/freeCodeCamp\/node_modules\/has$/.test(cwd))

at Context.<anonymous> (test/170.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'pwd' && /\/project\/freeCodeCamp\/node_modules\/has\/src$/.test(cwd))

at Context.<anonymous> (test/200.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'ls' && /\/project\/freeCodeCamp\/node_modules\/has\/src$/.test(cwd))

at Context.<anonymous> (test/210.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'ls' && /\/project\/freeCodeCamp\/node_modules\/has\/src$/.test(cwd))

at Context.<anonymous> (test/210.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'ls' && /\/project\/freeCodeCamp\/node_modules\/has\/src$/.test(cwd))

at Context.<anonymous> (test/210.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'ls' && /\/project\/freeCodeCamp\/node_modules\/has\/src$/.test(cwd))

at Context.<anonymous> (test/210.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'ls' && /\/project\/freeCodeCamp\/node_modules\/has\/src$/.test(cwd))

at Context.<anonymous> (test/210.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkTouch || checkMV)

at Context.<anonymous> (test/330.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkTouch || checkMV)

at Context.<anonymous> (test/360.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkTouch || checkMV)

at Context.<anonymous> (test/460.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkTouch || checkMV)

at Context.<anonymous> (test/470.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkTouch || checkMV)

at Context.<anonymous> (test/490.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkTouch || checkMV)

at Context.<anonymous> (test/510.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(imagesDirectory.indexOf('footer.jpeg') >= 0 && lastCommand[0] === 'cp' && /footer\.jpeg$/.test(lastCommand[1]) && /images/.test(lastCommand[2]))

at Context.<anonymous> (test/620.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'ls' && /\/project\/website$/.test(cwd))

at Context.<anonymous> (test/660.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(websiteDirectory.indexOf('header.png') < 0 && lastCommand[0] === 'rm' && /header\.png$/.test(lastCommand[1]))

at Context.<anonymous> (test/670.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(websiteDirectory.indexOf('header.png') < 0 && lastCommand[0] === 'rm' && /header\.png$/.test(lastCommand[1]))

at Context.<anonymous> (test/670.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(websiteDirectory.indexOf('header.png') < 0 && lastCommand[0] === 'rm' && /header\.png$/.test(lastCommand[1]))

at Context.<anonymous> (test/670.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(websiteDirectory.indexOf('header.png') < 0 && lastCommand[0] === 'rm' && /header\.png$/.test(lastCommand[1]))

at Context.<anonymous> (test/670.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'ls' && /\/project\/website$/.test(cwd))

at Context.<anonymous> (test/710.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'mv' && /lato\.ttf/.test(lastCommand[2]))

at Context.<anonymous> (test/720.test.js:10:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'mv' && /lato\.ttf/.test(lastCommand[2]))

at Context.<anonymous> (test/720.test.js:10:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'mv' && /lato\.ttf/.test(lastCommand[2]))

at Context.<anonymous> (test/720.test.js:10:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'mv' && /lato\.ttf/.test(lastCommand[2]))

at Context.<anonymous> (test/720.test.js:10:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'mv' && /lato\.ttf/.test(lastCommand[2]))

at Context.<anonymous> (test/720.test.js:10:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'mv' && /lato\.ttf/.test(lastCommand[2]))

at Context.<anonymous> (test/720.test.js:10:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkMkdir || checkMV)

at Context.<anonymous> (test/750.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'mv' && /menlo\.otf$/.test(lastCommand[1]) && /fonts/.test(lastCommand[2]))

at Context.<anonymous> (test/790.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'mv' && /menlo\.otf$/.test(lastCommand[1]) && /fonts/.test(lastCommand[2]))

at Context.<anonymous> (test/790.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'mv' && /menlo\.otf$/.test(lastCommand[1]) && /fonts/.test(lastCommand[2]))

at Context.<anonymous> (test/790.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkMkdir || checkMV)

at Context.<anonymous> (test/860.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkMkdir || checkMV)

at Context.<anonymous> (test/860.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkMkdir || checkMV)

at Context.<anonymous> (test/860.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && lastCommand[1] === '--help' && /\/project\/website$/.test(cwd))

at Context.<anonymous> (test/930.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && lastCommand[1] === '-name' && lastCommand[2] === 'styles.css' && /\/project\/website$/.test(cwd))

at Context.<anonymous> (test/950.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'cd' && /\/project\/website$/.test(cwd) && /\/project\/website\/client\/assets\/images$/.test(previousCwd))

at Context.<anonymous> (test/1040.test.js:10:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'cd' && /\/project\/website$/.test(cwd) && /\/project\/website\/client\/assets\/images$/.test(previousCwd))

at Context.<anonymous> (test/1040.test.js:10:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'cd' && /\/project\/website$/.test(cwd) && /\/project\/website\/client\/assets\/images$/.test(previousCwd))

at Context.<anonymous> (test/1040.test.js:10:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'cd' && /\/project\/website$/.test(cwd) && /\/project\/website\/client\/assets\/images$/.test(previousCwd))

at Context.<anonymous> (test/1040.test.js:10:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'cd' && /\/project\/website$/.test(cwd) && /\/project\/website\/client\/assets\/images$/.test(previousCwd))

at Context.<anonymous> (test/1040.test.js:10:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'cd' && /\/project\/website$/.test(cwd) && /\/project\/website\/client\/assets\/images$/.test(previousCwd))

at Context.<anonymous> (test/1040.test.js:10:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'cd' && /\/project\/website$/.test(cwd) && /\/project\/website\/client\/assets\/images$/.test(previousCwd))

at Context.<anonymous> (test/1040.test.js:10:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'mv' && /header\.png/.test(lastCommand[1]))

at Context.<anonymous> (test/1060.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'mv' && /header\.png/.test(lastCommand[1]))

at Context.<anonymous> (test/1060.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'mv' && /header\.png/.test(lastCommand[1]))

at Context.<anonymous> (test/1060.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && lastCommand[1] === '-name' && lastCommand[2] === 'images' && /\/project\/website$/.test(cwd))

at Context.<anonymous> (test/1090.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && lastCommand[1] === '-name' && lastCommand[2] === 'images' && /\/project\/website$/.test(cwd))

at Context.<anonymous> (test/1090.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && lastCommand[1] === '-name' && lastCommand[2] === 'images' && /\/project\/website$/.test(cwd))

at Context.<anonymous> (test/1090.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && lastCommand[1] === '-name' && lastCommand[2] === 'images' && /\/project\/website$/.test(cwd))

at Context.<anonymous> (test/1090.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && lastCommand[1] === '-name' && lastCommand[2] === 'images' && /\/project\/website$/.test(cwd))

at Context.<anonymous> (test/1090.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && lastCommand[1] === '-name' && lastCommand[2] === 'images' && /\/project\/website$/.test(cwd))

at Context.<anonymous> (test/1090.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'mv' && /header\.png$/.test(lastCommand[1]) && /client\/assets\/images/.test(lastCommand[2]))

at Context.<anonymous> (test/1100.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

Error: ENOENT: no such file or directory, scandir '../website/images'
FAILED TEST LOG
  ✘ tests should pass

Error: ENOENT: no such file or directory, scandir '../website/images'
FAILED TEST LOG
  ✘ tests should pass

Error: ENOENT: no such file or directory, scandir '../website/images'
FAILED TEST LOG
  ✘ tests should pass

Error: ENOENT: no such file or directory, scandir '../website/images'
FAILED TEST LOG
  ✘ tests should pass

Error: ENOENT: no such file or directory, scandir '../website/images'
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'mv' && /CodeRoad\.svg/.test(lastCommand[1]) && /client\/assets\/icons/.test(lastCommand[2]))

at Context.<anonymous> (test/1220.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'mv' && /CodeRoad\.svg/.test(lastCommand[1]) && /client\/assets\/icons/.test(lastCommand[2]))

at Context.<anonymous> (test/1220.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'mv' && /CodeRoad\.svg/.test(lastCommand[1]) && /client\/assets\/icons/.test(lastCommand[2]))

at Context.<anonymous> (test/1220.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'mv' && /CodeRoad\.svg/.test(lastCommand[1]) && /client\/assets\/icons/.test(lastCommand[2]))

at Context.<anonymous> (test/1220.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkMkdir || checkMV)

at Context.<anonymous> (test/1250.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && correctArgs && /\/project\/website$/.test(cwd))

at Context.<anonymous> (test/1300.test.js:10:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'rm' && lastCommand[1] === '--help' && /\/project\/website$/.test(cwd))

at Context.<anonymous> (test/1310.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(websiteDirectory.indexOf('fonts') < 0 && lastCommand[0] === 'rm' && correctArgs)

at Context.<anonymous> (test/1315.test.js:13:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'echo' && lastCommand[1] === 'for' && lastCommand[2] === `the` && lastCommand[3] === 'freeCodeCamp' && lastCommand[4] === 'bash' && lastCommand[5] === 'lessons' && lastCommand[6].op === `>>` && /README\.md$/.test(lastCommand[7]))

at Context.<anonymous> (test/1420.test.js:8:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'cp' && correctArgs)

at Context.<anonymous> (test/1475.test.js:15:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'cp' && correctArgs)

at Context.<anonymous> (test/1475.test.js:15:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && /toms-website/.test(lastCommand[1]) && /\/project$/.test(cwd))

at Context.<anonymous> (test/1490.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && /toms-website/.test(lastCommand[1]) && /\/project$/.test(cwd))

at Context.<anonymous> (test/1490.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && /toms-website/.test(lastCommand[1]) && /\/project$/.test(cwd))

at Context.<anonymous> (test/1490.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && /toms-website/.test(lastCommand[1]) && /\/project$/.test(cwd))

at Context.<anonymous> (test/1490.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && /website-boilerplate/.test(lastCommand[1]) && /\/project$/.test(cwd))

at Context.<anonymous> (test/1500.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && /website-boilerplate/.test(lastCommand[1]) && /\/project$/.test(cwd))

at Context.<anonymous> (test/1500.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && /website-boilerplate/.test(lastCommand[1]) && /\/project$/.test(cwd))

at Context.<anonymous> (test/1500.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && /website-boilerplate/.test(lastCommand[1]) && /\/project$/.test(cwd))

at Context.<anonymous> (test/1500.test.js:9:5)
